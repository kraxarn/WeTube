@{
	ViewData["Title"] = "Home Page";
	ViewData["Page"] = "index";

	string ToFirstUpperCase(string input) =>
		input.Substring(0, 1).ToUpper() + input.Substring(1).ToLower();
}

<div id="container">
	<h1> Welcome to WeTube! </h1>
	<div id="profile">
		<img id="avatar" src="/img/avatar/@(Model.Avatar).png">
		<div id="avatarSelect">
			@foreach (var image in WeTube.Storage.User.Images)
			{
				<div id="avatarOption" onclick="setAvatar('@image')">
					<img src="img/avatar/@(image).png">
					@(ToFirstUpperCase(WeTube.Storage.User.ImageToName(image)))
				</div>
			}
		</div>
		<span id="username">@Model.Name (@Model.Id)</span>
		<div id="nameEntry">
			<input id="nameInput" type="text" value="@Model.Name">
			<div id="saveName" class="button">Save</div>
		</div>
	</div>
	<ul id="panel">
		<li id="createRoom" class="button"> Create New Room  </li>
		<li id="roomEntry">
			<input id="roomInput" type="text" placeholder="Room Name">
			<div id="saveRoom" class="button">Save</div>
		</li>
		<li class="button"> <a asp-controller="browse"> Browse Public Rooms </a> </li>
		<li class="button"> <a asp-controller="rooms"> Your Rooms </a> </li>
		<li> <br> <a asp-controller="api" asp-action="signOut"> Sign out / Delete account </a> </li>
	</ul>

	<h1> About </h1>
	<p>
		Welcome to WeTube, where you can watch YouTube videos with friends
		together. This website is meant as a more modern, faster,
		privacy-friendly and open source alternative for other similar
		sites. Keep in mind that the website is currently under development
		and some features are missing or may not work correctly yet.
	</p>

	<h1> Privacy / Account </h1>
	<p>
		We never collect any private information, without you providing it
		manually, for example when changing your name. Your account is
		automatically created for you and is bound to your current browser.
		You can change your avatar to any of the preset ones and you can
		change your name to anything you like. Your account is automatically
		deleted after one year of inactivity.
	</p>

	<h1> Open Source </h1>
	<p>
		This website is open source and written in ASP.NET Core.
		For more information, visit the GitHub page.
	</p>

	<h1> Thanks </h1>
	<p>
		Special thanks to: <br>
		<a href="https://fonts.google.com">Google for the Roboto font</a> <br>
		<a href="https://www.emojione.com">EmojiOne for the avatars</a>
	</p>
</div>

<script>
	// TODO: Prefix variables with window.*
	// Open avatar selection
	avatar.addEventListener("click", () =>
	{
		if (avatarSelect.style.display === "block") {
			avatarSelect.style.display = "none"
		} else {
			avatarSelect.style.display = "block"
		}
	})

	// Switching between viewing/editing username
	username.addEventListener("click", () =>
	{
		username.style.display = "none"
		nameEntry.style.display = "flex"
	})
	saveName.addEventListener("click", () =>
	{
		username.style.display = "block"
		nameEntry.style.display = "none"
		username.textContent = nameInput.value
		setName()
	})

	// Show room name selection
	createRoom.addEventListener("click", () =>
	{
		createRoom.style.display = "none"
		roomEntry.style.display = "flex"
	})

	// Save room button
	saveRoom.addEventListener("click", () =>
	{
		const name = roomInput.value.replace(/\s/g, "").toLowerCase()

		if (name.length < 3 || name.length > 16) {
			return
		}

		console.log("Room name: %s", name)
	})

	// Update avatar image
	function setAvatar(name)
	{
		avatar.src = `img/avatar/${name}.png`
		avatarSelect.style.display = "none"

		updateUserInfo(`avatar=${name}`)
	}

	// Update name
	function setName()
	{
		if (nameInput.value.length < 3) {
			return
		}
		updateUserInfo(`name=${nameInput.value}`)
	}

	function updateUserInfo(values)
	{
		fetch(`/api/setUserInfo?${values}`)
			.then(response => {
				return response.json()
			})
			.then(json => {
				if (json.error) {
					console.log(json.message)
				} else {
					console.log("Update successful")
				}
			})
	}
</script>